# Generated by Django 4.1.1 on 2023-10-04 21:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("discord", "0003_alter_discordaccount_discord_username"),
        ("halo_infinite", "0003_alter_haloinfinitebuildid_options_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="DomainMaster",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("mastered_at", models.DateTimeField()),
                ("domain_count", models.IntegerField(default=0)),
                (
                    "creator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "master",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="domain_master",
                        to="discord.discordaccount",
                    ),
                ),
            ],
            options={
                "verbose_name": "Domain Master",
                "verbose_name_plural": "Domain Masters",
                "db_table": "DomainMaster",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="DomainChallengeTeamReassignment",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "next_team",
                    models.CharField(
                        choices=[
                            ("FunTimeBot", "Team FunTimeBot"),
                            ("HFT Intern", "Team HFT Intern"),
                            ("Unassigned", "Unassigned"),
                        ],
                        max_length=10,
                        verbose_name="Next Team",
                    ),
                ),
                (
                    "reassignment_date",
                    models.DateField(verbose_name="Reassignment Date"),
                ),
                ("reason", models.CharField(blank=True, max_length=200)),
                (
                    "creator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "reassignee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="reassignees",
                        to="discord.discordaccount",
                        verbose_name="Reassignee",
                    ),
                ),
            ],
            options={
                "verbose_name": "Team Reassignment",
                "verbose_name_plural": "Team Reassignments",
                "db_table": "DomainChallengeTeamReassignment",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="DomainChallengeTeamAssignment",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "team",
                    models.CharField(
                        choices=[
                            ("FunTimeBot", "Team FunTimeBot"),
                            ("HFT Intern", "Team HFT Intern"),
                            ("Unassigned", "Unassigned"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "assignee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="assignees",
                        to="discord.discordaccount",
                        verbose_name="Assignee",
                    ),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Team Assignment",
                "verbose_name_plural": "Team Assignments",
                "db_table": "DomainChallengeTeamAssignment",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Domain",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=128, verbose_name="Name")),
                (
                    "description",
                    models.CharField(max_length=256, verbose_name="Description"),
                ),
                (
                    "stat",
                    models.CharField(
                        choices=[
                            ("TimePlayed", "TimePlayed"),
                            ("MatchesCompleted", "MatchesCompleted"),
                            ("Wins", "Wins"),
                            ("Losses", "Losses"),
                            ("Ties", "Ties"),
                            ("CoreStats_Score", "Score"),
                            ("CoreStats_PersonalScore", "PersonalScore"),
                            ("CoreStats_RoundsWon", "RoundsWon"),
                            ("CoreStats_RoundsLost", "RoundsLost"),
                            ("CoreStats_RoundsTied", "RoundsTied"),
                            ("CoreStats_Kills", "Kills"),
                            ("CoreStats_Deaths", "Deaths"),
                            ("CoreStats_Assists", "Assists"),
                            ("CoreStats_AverageKDA", "AverageKDA"),
                            ("CoreStats_Suicides", "Suicides"),
                            ("CoreStats_Betrayals", "Betrayals"),
                            ("CoreStats_GrenadeKills", "GrenadeKills"),
                            ("CoreStats_HeadshotKills", "HeadshotKills"),
                            ("CoreStats_MeleeKills", "MeleeKills"),
                            ("CoreStats_PowerWeaponKills", "PowerWeaponKills"),
                            ("CoreStats_ShotsFired", "ShotsFired"),
                            ("CoreStats_ShotsHit", "ShotsHit"),
                            ("CoreStats_Accuracy", "Accuracy"),
                            ("CoreStats_DamageDealt", "DamageDealt"),
                            ("CoreStats_DamageTaken", "DamageTaken"),
                            ("CoreStats_CalloutAssists", "CalloutAssists"),
                            ("CoreStats_VehicleDestroys", "VehicleDestroys"),
                            ("CoreStats_DriverAssists", "DriverAssists"),
                            ("CoreStats_Hijacks", "Hijacks"),
                            ("CoreStats_EmpAssists", "EmpAssists"),
                            ("CoreStats_MaxKillingSpree", "MaxKillingSpree"),
                            ("CoreStats_Medals", "Medal Count"),
                            (
                                "CaptureTheFlagStats_FlagCaptureAssists",
                                "CTF: FlagCaptureAssists",
                            ),
                            ("CaptureTheFlagStats_FlagCaptures", "CTF: FlagCaptures"),
                            (
                                "CaptureTheFlagStats_FlagCarriersKilled",
                                "CTF: FlagCarriersKilled",
                            ),
                            ("CaptureTheFlagStats_FlagGrabs", "CTF: FlagGrabs"),
                            (
                                "CaptureTheFlagStats_FlagReturnersKilled",
                                "CTF: FlagReturnersKilled",
                            ),
                            ("CaptureTheFlagStats_FlagReturns", "CTF: FlagReturns"),
                            ("CaptureTheFlagStats_FlagSecures", "CTF: FlagSecures"),
                            ("CaptureTheFlagStats_FlagSteals", "CTF: FlagSteals"),
                            (
                                "CaptureTheFlagStats_KillsAsFlagCarrier",
                                "CTF: KillsAsFlagCarrier",
                            ),
                            (
                                "CaptureTheFlagStats_KillsAsFlagReturner",
                                "CTF: KillsAsFlagReturner",
                            ),
                            (
                                "CaptureTheFlagStats_TimeAsFlagCarrier",
                                "CTF: TimeAsFlagCarrier",
                            ),
                            (
                                "EliminationStats_AlliesRevived",
                                "Elimination: AlliesRevived",
                            ),
                            (
                                "EliminationStats_EliminationAssists",
                                "Elimination: EliminationAssists",
                            ),
                            (
                                "EliminationStats_Eliminations",
                                "Elimination: Eliminations",
                            ),
                            (
                                "EliminationStats_EnemyRevivesDenied",
                                "Elimination: EnemyRevivesDenied",
                            ),
                            ("EliminationStats_Executions", "Elimination: Executions"),
                            (
                                "EliminationStats_KillsAsLastPlayerStanding",
                                "Elimination: KillsAsLastPlayerStanding",
                            ),
                            (
                                "EliminationStats_LastPlayersStandingKilled",
                                "Elimination: LastPlayersStandingKilled",
                            ),
                            (
                                "EliminationStats_RoundsSurvived",
                                "Elimination: RoundsSurvived",
                            ),
                            (
                                "EliminationStats_TimesRevivedByAlly",
                                "Elimination: TimesRevivedByAlly",
                            ),
                            ("InfectionStats_AlphasKilled", "Infection: AlphasKilled"),
                            (
                                "InfectionStats_SpartansInfected",
                                "Infection: SpartansInfected",
                            ),
                            (
                                "InfectionStats_SpartansInfectedAsAlpha",
                                "Infection: SpartansInfectedAsAlpha",
                            ),
                            (
                                "InfectionStats_KillsAsLastSpartanStanding",
                                "Infection: KillsAsLastSpartanStanding",
                            ),
                            (
                                "InfectionStats_LastSpartansStandingInfected",
                                "Infection: LastSpartansStandingInfected",
                            ),
                            (
                                "InfectionStats_RoundsAsAlpha",
                                "Infection: RoundsAsAlpha",
                            ),
                            (
                                "InfectionStats_RoundsAsLastSpartanStanding",
                                "Infection: RoundsAsLastSpartanStanding",
                            ),
                            (
                                "InfectionStats_RoundsFinishedAsInfected",
                                "Infection: RoundsFinishedAsInfected",
                            ),
                            (
                                "InfectionStats_RoundsSurvivedAsSpartan",
                                "Infection: RoundsSurvivedAsSpartan",
                            ),
                            (
                                "InfectionStats_RoundsSurvivedAsLastSpartanStanding",
                                "Infection: RoundsSurvivedAsLastSpartanStanding",
                            ),
                            (
                                "InfectionStats_TimeAsLastSpartanStanding",
                                "Infection: TimeAsLastSpartanStanding",
                            ),
                            (
                                "InfectionStats_InfectedKilled",
                                "Infection: InfectedKilled",
                            ),
                            (
                                "OddballStats_KillsAsSkullCarrier",
                                "Oddball: KillsAsSkullCarrier",
                            ),
                            (
                                "OddballStats_LongestTimeAsSkullCarrier",
                                "Oddball: LongestTimeAsSkullCarrier",
                            ),
                            (
                                "OddballStats_SkullCarriersKilled",
                                "Oddball: SkullCarriersKilled",
                            ),
                            ("OddballStats_SkullGrabs", "Oddball: SkullGrabs"),
                            (
                                "OddballStats_TimeAsSkullCarrier",
                                "Oddball: TimeAsSkullCarrier",
                            ),
                            (
                                "OddballStats_SkullScoringTicks",
                                "Oddball: SkullScoringTicks",
                            ),
                            ("ZonesStats_ZoneCaptures", "Zones: ZoneCaptures"),
                            (
                                "ZonesStats_ZoneDefensiveKills",
                                "Zones: ZoneDefensiveKills",
                            ),
                            (
                                "ZonesStats_ZoneOffensiveKills",
                                "Zones: ZoneOffensiveKills",
                            ),
                            ("ZonesStats_ZoneSecures", "Zones: ZoneSecures"),
                            (
                                "ZonesStats_TotalZoneOccupationTime",
                                "Zones: TotalZoneOccupationTime",
                            ),
                            ("ZonesStats_ZoneScoringTicks", "Zones: ZoneScoringTicks"),
                            (
                                "StockpileStats_KillsAsPowerSeedCarrier",
                                "Stockpile: KillsAsPowerSeedCarrier",
                            ),
                            (
                                "StockpileStats_PowerSeedCarriersKilled",
                                "Stockpile: PowerSeedCarriersKilled",
                            ),
                            (
                                "StockpileStats_PowerSeedsDeposited",
                                "Stockpile: PowerSeedsDeposited",
                            ),
                            (
                                "StockpileStats_PowerSeedsStolen",
                                "Stockpile: PowerSeedsStolen",
                            ),
                            (
                                "StockpileStats_TimeAsPowerSeedCarrier",
                                "Stockpile: TimeAsPowerSeedCarrier",
                            ),
                            (
                                "StockpileStats_TimeAsPowerSeedDriver",
                                "Stockpile: TimeAsPowerSeedDriver",
                            ),
                        ],
                        max_length=128,
                        verbose_name="Stat",
                    ),
                ),
                (
                    "medal_id",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Medal ID (only necessary if Stat is 'Medal Count')",
                    ),
                ),
                (
                    "max_score",
                    models.CharField(max_length=64, verbose_name="Max Score"),
                ),
                ("effective_date", models.DateField(verbose_name="Effective Date")),
                (
                    "creator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "playlist",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="domains",
                        to="halo_infinite.haloinfiniteplaylist",
                        verbose_name="Playlist",
                    ),
                ),
            ],
            options={
                "verbose_name": "Domain",
                "verbose_name_plural": "Domains",
                "db_table": "Domain",
                "ordering": ["-effective_date"],
            },
        ),
    ]
