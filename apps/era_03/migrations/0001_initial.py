# Generated by Django 5.1.4 on 2025-02-04 05:16

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('discord', '0006_alter_discordaccount_created_at_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BoatCaptain',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('earned_at', models.DateTimeField()),
                ('rank_tier', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Rank Tier')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('earner', models.OneToOneField(on_delete=django.db.models.deletion.RESTRICT, related_name='boat_captain', to='discord.discordaccount')),
            ],
            options={
                'verbose_name': 'Boat Captain',
                'verbose_name_plural': 'Boat Captains',
                'db_table': 'BoatCaptain',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BoatRank',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('rank', models.CharField(max_length=255, verbose_name='Rank')),
                ('tier', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Tier')),
                ('track', models.CharField(choices=[('N/A', 'N/A'), ('COMMAND', 'Command'), ('MACHINERY', 'Machinery'), ('HOSPITALITY', 'Hospitality'), ('CULINARY', 'Culinary')], default='N/A', max_length=255, verbose_name='Track')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Rank',
                'verbose_name_plural': 'Ranks',
                'db_table': 'BoatRank',
                'ordering': ['tier', 'track'],
            },
        ),
        migrations.RunPython(
            code=lambda apps, schema_editor: None if settings.ENVIRONMENT == "dev" else apps.get_model('era_03', 'BoatRank').objects.create(
                rank='Junior Deckhand',
                tier=1,
                track='N/A', 
                description='The lowest rank in the crew. Responsible for sweeping the poop deck.',
                creator=apps.get_model(settings.AUTH_USER_MODEL).objects.first()
            ),
            reverse_code=lambda apps, schema_editor: None if settings.ENVIRONMENT == "dev" else apps.get_model('era_03', 'BoatRank').objects.filter(rank='Junior Deckhand', tier=1).delete()
        ),
        migrations.CreateModel(
            name='BoatDeckhand',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('most_recent_match_id', models.UUIDField(blank=True, null=True, verbose_name='Most Recent Match ID')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('deckhand', models.OneToOneField(on_delete=django.db.models.deletion.RESTRICT, related_name='deckhands', to='discord.discordaccount', verbose_name='Deckhand')),
                ('rank', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='deckhands', to='era_03.boatrank', verbose_name='Rank')),
            ],
            options={
                'verbose_name': 'Deckhand',
                'verbose_name_plural': 'Deckhands',
                'db_table': 'BoatDeckhand',
                'ordering': ['-created_at'],
            },
        ),
    ]
